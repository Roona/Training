package com.roona.bo;
// Generated Jan 28, 2016 10:56:05 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ApplicationRequest generated by hbm2java
 */
@Entity
@Table(name = "application_request", catalog = "mywebapp")
public class ApplicationRequest implements java.io.Serializable {

	private Integer id;
	private Application application;
	private Complexity complexity;
	private User user;
	private Date startDate;
	private Date endDate;
	private String status;
	private String comments;
	private Set<ApplicationRequestDetails> applicationRequestDetailses = new HashSet<ApplicationRequestDetails>(0);

	public ApplicationRequest() {
	}

	public ApplicationRequest(Application application, User user, Date startDate, String status) {
		this.application = application;
		this.user = user;
		this.startDate = startDate;
		this.status = status;
	}

	public ApplicationRequest(Application application, Complexity complexity, User user, Date startDate, Date endDate,
			String status, String comments, Set<ApplicationRequestDetails> applicationRequestDetailses) {
		this.application = application;
		this.complexity = complexity;
		this.user = user;
		this.startDate = startDate;
		this.endDate = endDate;
		this.status = status;
		this.comments = comments;
		this.applicationRequestDetailses = applicationRequestDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "application_id", nullable = false)
	public Application getApplication() {
		return this.application;
	}

	public void setApplication(Application application) {
		this.application = application;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "complexity_id")
	public Complexity getComplexity() {
		return this.complexity;
	}

	public void setComplexity(Complexity complexity) {
		this.complexity = complexity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "requestorid", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_date", nullable = false, length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "end_date", length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "status", nullable = false, length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "comments", length = 200)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "applicationRequest")
	public Set<ApplicationRequestDetails> getApplicationRequestDetailses() {
		return this.applicationRequestDetailses;
	}

	public void setApplicationRequestDetailses(Set<ApplicationRequestDetails> applicationRequestDetailses) {
		this.applicationRequestDetailses = applicationRequestDetailses;
	}

}
