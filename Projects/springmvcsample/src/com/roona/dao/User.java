package com.roona.dao;
// Generated Feb 27, 2016 12:30:49 AM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "mywebapp")
public class User implements java.io.Serializable {

	private Integer id;
	private Login login;
	private Role role;
	private String firstname;
	private String lastname;
	private String contactno;
	private String email;
	private boolean active;
	private Set<ApplicationRequestDetails> applicationRequestDetailses = new HashSet<ApplicationRequestDetails>(0);
	private Set<Address> addresses = new HashSet<Address>(0);
	private Set<ApplicationRequest> applicationRequests = new HashSet<ApplicationRequest>(0);

	public User() {
	}

	public User(boolean active) {
		this.active = active;
	}

	public User(Login login, Role role, String firstname, String lastname, String contactno, String email,
			boolean active, Set<ApplicationRequestDetails> applicationRequestDetailses, Set<Address> addresses,
			Set<ApplicationRequest> applicationRequests) {
		this.login = login;
		this.role = role;
		this.firstname = firstname;
		this.lastname = lastname;
		this.contactno = contactno;
		this.email = email;
		this.active = active;
		this.applicationRequestDetailses = applicationRequestDetailses;
		this.addresses = addresses;
		this.applicationRequests = applicationRequests;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "loginid")
	public Login getLogin() {
		return this.login;
	}

	public void setLogin(Login login) {
		this.login = login;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "roleid")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "firstname", length = 45)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname", length = 45)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "contactno", length = 45)
	public String getContactno() {
		return this.contactno;
	}

	public void setContactno(String contactno) {
		this.contactno = contactno;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<ApplicationRequestDetails> getApplicationRequestDetailses() {
		return this.applicationRequestDetailses;
	}

	public void setApplicationRequestDetailses(Set<ApplicationRequestDetails> applicationRequestDetailses) {
		this.applicationRequestDetailses = applicationRequestDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<ApplicationRequest> getApplicationRequests() {
		return this.applicationRequests;
	}

	public void setApplicationRequests(Set<ApplicationRequest> applicationRequests) {
		this.applicationRequests = applicationRequests;
	}

}
